#!/bin/bash
myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`;
myint=`ifconfig | grep -B1 "inet addr:$myip" | head -n1 | awk '{print $1}'`;
if [ $USER != 'root' ]; then
echo "à¸•à¹‰à¸­à¸‡à¹ƒà¸Šà¹‰à¸£à¸¹à¸—à¸™à¸°"
exit 1
fi
if [[ "$EUID" -ne 0 ]]; then
echo "à¸„à¸§à¸¢à¹€à¸­à¹‰à¸¢ à¸£à¸¹à¸—"
exit 2
fi
if [[ ! -e /dev/net/tun ]]; then
echo "TUN à¹„à¸¡à¹ˆà¸•à¸­à¸šà¸ªà¸™à¸­à¸‡"
exit 3
fi
echo "à¸—à¸³à¹ƒà¸Šà¹‰à¹€à¸­à¸‡"
clear
echo "à¸•à¸±à¹‰à¸‡à¹€à¸§à¸¥à¸² à¸à¸£à¸¸à¸‡à¹€à¸—à¸ž  +7"
ln -fs /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime;
clear
echo "à¹€à¸›à¸´à¸” IPV4 à¸à¸±à¸š IPV6"
echo ipv4 >> /etc/modules
echo ipv6 >> /etc/modules
sysctl -w net.ipv4.ip_forward=1
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
sed -i 's/#net.ipv6.conf.all.forwarding=1/net.ipv6.conf.all.forwarding=1/g' /etc/sysctl.conf
sysctl -p
clear
echo "à¹à¸žà¸„ à¸ªà¹à¸›à¸¡"
apt-get -y --purge remove samba*;
apt-get -y --purge remove apache2*;
apt-get -y --purge remove sendmail*;
apt-get -y --purge remove postfix*;
apt-get -y --purge remove bind*;
clear

sh -c 'echo "deb http://download.webmin.com/download/repository sarge contrib" > /etc/apt/sources.list.d/webmin.list'
wget -qO - http://www.webmin.com/jcameron-key.asc | apt-key add -
apt-get update;
apt-get -y autoremove;
apt-get -y install wget curl;
echo "
"
# detail
country=MY
state=Terengganu
locality=-
organization=Interpass
organizationalunit=InterpassGroup
commonname=Hake
email=-
cd

# text gambar
apt-get install boxes

# color text
cd
rm -rf /root/.bashrc
wget -O /root/.bashrc "http://borneovpshosting.com/autoscript/Debian9/.bashrc"
# install lolcat
sudo apt-get -y install ruby
sudo gem install lolcat


# script
wget -O /etc/pam.d/common-password "http://borneovpshosting.com/autoscript/Debian9/common-password"
chmod +x /etc/pam.d/common-password
# Install Dos Deflate
apt-get -y install dnsutils dsniff
wget http://borneovpshosting.com/autoscript/Debian9/ddos-deflate-master.zip
unzip master.zip
cd ddos-deflate-master
./install.sh
cd
service exim4 stop;sysv-rc-conf exim4 off;
# webmin
apt-get -y install webmin
sed -i 's/ssl=1/ssl=0/g' /etc/webmin/miniserv.conf
sed -i 's/#Banner/Banner/g' /etc/ssh/sshd_config
service ssh restart
# dropbear
apt-get -y install dropbear
wget -O /etc/default/dropbear "http://borneovpshosting.com/autoscript/Debian9/dropbear"
sed -i 's/DROPBEAR_BANNER=""/DROPBEAR_BANNER="\/etc\/issue.net"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
# install banner
cd
wget -O /etc/issue.net "http://borneovpshosting.com/autoscript/Debian9/banner.txt"
chmod +x /usr/bin/banner.txt
service dropbear restart
# squid3
apt-get -y install squid3
wget -O /etc/squid3/squid.conf "http://borneovpshosting.com/autoscript/Debian9/squid.conf"
wget -O /etc/squid/squid.conf "http://borneovpshosting.com/autoscript/Debian9/squid.conf"
sed -i "s/ipserver/$myip/g" /etc/squid3/squid.conf
sed -i "s/ipserver/$myip/g" /etc/squid/squid.conf
# openvpn
apt-get -y install openvpn
wget -O /etc/openvpn/openvpn.tar "http://borneovpshosting.com/autoscript/Debian9/openvpn.tar"
cd /etc/openvpn/;tar xf openvpn.tar;rm openvpn.tar
wget -O /etc/rc.local "http://borneovpshosting.com/autoscript/Debian9/rc.local";chmod +x /etc/rc.local
#wget -O /etc/iptables.up.rules "http://borneovpshosting.com/autoscript/Debian9/iptables.up.rules"
#sed -i "s/ipserver/$myip/g" /etc/iptables.up.rules
#iptables-restore < /etc/iptables.up.rules
# Debemos ser root
if [[ $EUID -ne 0 ]]; then
echo "Ejecuta el script como root o con privilegios 'sudo'"
   exit 1
fi

apt-get update && apt-get install -y lsb-release

OSRELEASE=$(lsb_release -si | awk '{print tolower($0)}')

## Reconfigure Dash
echo "dash dash/sh boolean false" | debconf-set-selections
dpkg-reconfigure -f noninteractive dash > /dev/null 2>&1

MY_IP=$(ip a s|sed -ne '/127.0.0.1/!{s/^[ \t]*inet[ \t]*\([0-9.]\+\)\/.*$/\1/p}' | tr '\n' ' ')

echo -e "Elige un nombre de host, por ej: mail.dominio.com []: \c "
read  SERVER_FQDN

echo "$MY_IP $SERVER_FQDN" >>/etc/hosts
hostnamectl set-hostname $SERVER_FQDN
echo "$SERVER_FQDN" > /proc/sys/kernel/hostname

# Configuración repositorios
mv /etc/apt/sources.list /etc/apt/sources.list_$$.bkp
echo "deb http://ftp.es.debian.org/debian/ stretch main contrib non-free
deb-src http://ftp.es.debian.org/debian/ stretch main contrib non-free
deb http://security.debian.org/ stretch/updates main contrib non-free
deb-src http://security.debian.org/ stretch/updates main contrib non-free
deb http://ftp.es.debian.org/debian/ stretch-updates main contrib non-free
deb-src http://ftp.es.debian.org/debian/ stretch-updates main contrib non-free
deb http://ftp.es.debian.org/debian/ stretch-backports main contrib non-free
deb-src http://ftp.es.debian.org/debian/ stretch-backports main contrib non-free" > /etc/apt/sources.list

# Actualziación sistema
apt-get update && apt-get upgrade -y

# Instalación herramientas generales
apt-get -y install ssh openssh-server ntp binutils sudo ntpdate curl dirmngr wget nano vim git htop dialog dnsutils geoip-database fail2ban ufw

# Instalar MYSQL/MARIDB
apt-get -y install mariadb-client mariadb-server

sed -i 's|bind-address|#bind-address|' /etc/mysql/mariadb.conf.d/50-server.cnf
sed -i 's|# this is only for embedded server|sql_mode=NO_ENGINE_SUBSTITUTION|' /etc/mysql/mariadb.conf.d/50-server.cnf
echo "update mysql.user set plugin = 'mysql_native_password' where user='root';" | mysql -u root
echo "mysql soft nofile 65535
mysql hard nofile 65535" >> /etc/security/limits.conf
mkdir -p /etc/systemd/system/mysql.service.d/
echo "[Service]
LimitNOFILE=infinity" > /etc/systemd/system/mysql.service.d/limits.conf
systemctl daemon-reload
mysql_secure_installation
echo -e "¿Cual es la contraseña de root para MySQL? \c "
read MYSQLPASS
sed -i 's|password =|password = '"$MYSQLPASS"'|' /etc/mysql/debian.cnf
service mysql restart

# Instalar NGINX y PHP
apt-get -y install daemon nginx nginx-extras unzip zip
apt-get -y install php php-common php-gd php-mysql php-imap php-cli php-cgi 
apt-get -y install php-pear php-mcrypt php-imagick php-mbstring php-ldap php7.0-opcache php-apcu
apt-get -y install php-curl php-intl php-memcache php-memcached php-pspell php7.0-zip php7.0-soap
apt-get -y install php-recode php-sqlite3 php-tidy php-xmlrpc php-xsl php-xml php-fpm phpmyadmin memcached php-gettext
apt-get -y install mcrypt imagemagick ssl-cert certbot python-certbot-nginx

# Optimizar NGINX
mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.original
cat >> /etc/nginx/nginx.conf << N0deNet
user www-data;
worker_processes auto;
pid /run/nginx.pid;
worker_rlimit_nofile 30000;
# Carga de Módulos
load_module "modules/ngx_http_geoip_module.so";
load_module "modules/ngx_http_uploadprogress_module.so";
events {
        use epoll;
        worker_connections 40960;
        multi_accept on;
}
http {
        ##
        # CloudFlare y Proxys
        ##
        
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 104.16.0.0/12;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 131.0.72.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;
        set_real_ip_from 199.27.128.0/21;
        set_real_ip_from 2400:cb00::/32;
        set_real_ip_from 2606:4700::/32;
        set_real_ip_from 2803:f800::/32;
        set_real_ip_from 2405:b500::/32;
        set_real_ip_from 2405:8100::/32;
        set_real_ip_from 2c0f:f248::/32;
        set_real_ip_from 2a06:98c0::/29;
        set_real_ip_from 127.0.0.1;
        real_ip_header CF-Connecting-IP;
        
        ##
        # Básico
        ##
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 2;
        types_hash_max_size 2048;
        client_body_buffer_size  1m;
        client_max_body_size 32m;
        client_header_buffer_size 3m;
        client_body_timeout   3m;
        client_header_timeout 3m;
        large_client_header_buffers 4 256k;
        open_file_cache          max=5000  inactive=20s;
        open_file_cache_valid    30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors   on;
        
        
        ##
        # Headers
        ##
        
        server_tokens off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout 5s;
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'" always;
        add_header X-Xss-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        ##
        # Logs
        ##
        
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        
        ##
        # Mitigación DOS
        ##
        
        limit_conn_zone \$binary_remote_addr zone=conn_limit_per_ip:10m;
        limit_req_zone \$binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;
        server {
            listen 80;
            limit_conn conn_limit_per_ip 10;
            limit_req zone=req_limit_per_ip burst=10 nodelay;
        }
        
        
        ##
        # Performance
        ##
        
        aio threads;
        fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=1000m inactive=60m;
        fastcgi_cache_key \$scheme\$request_method\$host\$request_uri;
        fastcgi_cache_lock on;
        fastcgi_cache_use_stale error timeout invalid_header updating http_500;
        fastcgi_cache_valid 5m;
        fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
        
        ##
        # PHP
        ##
        
        fastcgi_buffers 256 32k;
        fastcgi_buffer_size 256k;
        fastcgi_connect_timeout 4s;
        fastcgi_send_timeout 120s;
        fastcgi_read_timeout 120s;
        fastcgi_busy_buffers_size 512k;
        fastcgi_temp_file_write_size 512K;
        reset_timedout_connection on;
        
        ##
        # Extra
        ##
       
        upload_progress upload 1m;
        ##
        # Gzip
        ##
        
        gzip on;
        gzip_disable "msie6";
        gzip_static on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/atom+xml application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon image/bmp image/png image/gif image/jpeg image/jpg text/x-component;
        
        ##
        # SSL - TLS
        ##
        
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-D:ECDHE-RSA-CHACHA20-POLY1305-D:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA384';
        ssl_prefer_server_ciphers on;
        
        ##
        # GeoIP
        ##
        
        geoip_country /usr/share/GeoIP/GeoIP.dat;
        map \$geoip_country_code \$allowed_country {
                default yes;
                CN no;
                Ru no;
                BR no;
            }
        
        ##
        # Ficheros extra de configuración
        ##
        
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}
N0deNet

# Optimizar PHP
sed -i 's|;cgi.fix_pathinfo=1|cgi.fix_pathinfo=0|' /etc/php/7.0/fpm/php.ini
sed -i 's|upload_max_filesize = 2M|upload_max_filesize = 2048M|' /etc/php/7.0/fpm/php.ini
sed -i 's|post_max_size = 8M|post_max_size = 64M|' /etc/php/7.0/fpm/php.ini
sed -i 's|error_reporting = E_ALL & ~E_DEPRECATED|error_reporting =  E_ERROR|' /etc/php/7.0/fpm/php.ini
sed -i 's|short_open_tag = Off|short_open_tag = On|' /etc/php/7.0/fpm/php.ini
sed -i "s|;date.timezone =|date.timezone = 'Europe\/Madrid'|" /etc/php/7.0/fpm/php.ini
sed -i "s|; max_input_vars = 1000|max_input_vars = 1000|" /etc/php/7.0/fpm/php.ini
sed -i "s|;emergency_restart_threshold = 0|emergency_restart_threshold = 10|" /etc/php/7.0/fpm/php-fpm.conf 
sed -i "s|;emergency_restart_interval = 0|emergency_restart_interval = 1m|" /etc/php/7.0/fpm/php-fpm.conf 
sed -i "s|;process_control_timeout = 0|process_control_timeout = 5|" /etc/php/7.0/fpm/php-fpm.conf 
service php7.0-fpm reload

# Instalar Jailkit
apt-get -y install build-essential autoconf automake libtool flex bison debhelper binutils
cd /tmp
wget http://olivier.sessink.nl/jailkit/jailkit-2.19.tar.gz
tar xvfz jailkit-2.19.tar.gz
cd jailkit-2.19
echo 5 > debian/compat
./debian/rules binary
cd ..
dpkg -i jailkit_2.19-1_*.deb
rm -rf jailkit-2.19*

# Instalar FTP y quotas
apt-get -y install pure-ftpd-common pure-ftpd-mysql quota quotatool

sed -i 's|VIRTUALCHROOT=false|VIRTUALCHROOT=true|' /etc/default/pure-ftpd-common
echo 1 > /etc/pure-ftpd/conf/TLS
mkdir -p /etc/ssl/private/

openssl req -x509 -nodes -days 7300 -newkey rsa:2048 -keyout /etc/ssl/private/pure-ftpd.pem -out /etc/ssl/private/pure-ftpd.pem
chmod 600 /etc/ssl/private/pure-ftpd.pem && service pure-ftpd-mysql restart

## Instalar panel
cd /tmp
get_isp=https://www.ispconfig.org/downloads/ISPConfig-3-stable.tar.gz
wget -c ${get_isp}
tar xvfz $(basename ${get_isp})
cd ispconfig3_install/install && php -q install.php
# etc
wget -O /home/vps/public_html/client.ovpn "http://borneovpshosting.com/autoscript/Debian9/client.ovpn"
wget -O /home/vps/public_html/client1.ovpn "http://borneovpshosting.com/autoscript/Debian9/client1.ovpn"
sed -i 's/AcceptEnv/#AcceptEnv/g' /etc/ssh/sshd_config
sed -i "s/ipserver/$myip/g" /home/vps/public_html/client.ovpn
sed -i "s/ipserver/$myip/g" /home/vps/public_html/client1.ovpn
#useradd -m -g users -s /bin/bash test
#echo "test:test" | chpasswd
echo "UPDATE AND INSTALL COMPLETE COMPLETE 99% BE PATIENT"
rm *.sh;rm *.txt;rm *.tar;rm *.deb;rm *.asc;rm *.zip;rm ddos*;
clear

# install vnstat gui
cd /home/vps/public_html/
wget http://borneovpshosting.com/autoscript/Debian9/vnstat_php_frontend-1.5.1.tar.gz
tar xf vnstat_php_frontend-1.5.1.tar.gz
rm vnstat_php_frontend-1.5.1.tar.gz
mv vnstat_php_frontend-1.5.1 vnstat
cd vnstat
sed -i "s/\$iface_list = array('eth0', 'sixxs');/\$iface_list = array('eth0');/g" config.php
sed -i "s/\$language = 'nl';/\$language = 'en';/g" config.php
sed -i 's/Internal/Internet/g' config.php
sed -i '/SixXS IPv6/d' config.php
sed -i "s/\$locale = 'en_US.UTF-8';/\$locale = 'en_US.UTF+8';/g" config.php
cd
clear
# Install BadVPN
apt-get -y install cmake make gcc
wget http://borneovpshosting.com/autoscript/Debian9/badvpn-1.999.127.tar.bz2
tar xf badvpn-1.999.127.tar.bz2
mkdir badvpn-build
cd badvpn-build
cmake ~/badvpn-1.999.127 -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1
make install
screen badvpn-udpgw --listen-addr 127.0.0.1:7300 > /dev/null &
cd

# install stunnel
apt-get install stunnel4 -y
cat > /etc/stunnel/stunnel.conf <<-END
cert = /etc/stunnel/stunnel.pem
pid = /stunnel.pid
client = no	
socket = a:SO_REUSEADDR=1
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
[dropbear]
accept = 443
connect = 127.0.0.1:442
connect = 127.0.0.1:109
connect = 127.0.0.1:110
;[squid]
;accept = 8000
;connect = 127.0.0.1:3128
;connect = 127.0.0.1:80
;connect = 127.0.0.1:8080
END

#membuat sertifikat
openssl genrsa -out key.pem 2048
openssl req -new -x509 -key key.pem -out cert.pem -days 1095 \
-subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"
cat key.pem cert.pem >> /etc/stunnel/stunnel.pem

#konfigurasi stunnel
sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/stunnel4
/etc/init.d/stunnel4 restart


# download script
cd
wget -O /usr/bin/motd "https://raw.githubusercontent.com/sslmode/sslmode/master/tools/motd"
wget -O /usr/bin/benchmark "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/benchmark.sh"
wget -O /usr/bin/speedtest  "http://xhome.tech/Debian9/speedtest_cli.py"
wget -O /usr/bin/ps-mem "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/ps_mem.py"
wget -O /usr/bin/dropmon "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/dropmon.sh"
wget -O /usr/bin/menu "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/menu"
wget -O /usr/bin/user-active-list "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-active-list.sh"
wget -O /usr/bin/user-add "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-add.sh"
wget -O /usr/bin/user-add-pptp "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-add-pptp.sh"
wget -O /usr/bin/user-del "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-del.sh"
wget -O /usr/bin/disable-user-expire "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/disable-user-expire.sh"
wget -O /usr/bin/delete-user-expire "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/delete-user-expire.sh"
wget -O /usr/bin/banned-user "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/banned-user.sh"
wget -O /usr/bin/unbanned-user "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/unbanned-user.sh"
wget -O /usr/bin/user-expire-list "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-expire-list.sh"
wget -O /usr/bin/user-gen "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-gen.sh"
wget -O /usr/bin/userlimit.sh "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/userlimit.sh"
wget -O /usr/bin/userlimitssh.sh "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/userlimitssh.sh"
wget -O /usr/bin/user-list "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-list.sh"
wget -O /usr/bin/user-login "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-login.sh"
wget -O /usr/bin/user-pass "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-pass.sh"
wget -O /usr/bin/user-renew "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/user-renew.sh"
wget -O /usr/bin/clearcache.sh "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/clearcache.sh"
wget -O /usr/bin/bannermenu "https://raw.githubusercontent.com/macisvpn/premiumnow/master/menu/bannermenu"
cd

#rm -rf /etc/cron.weekly/
#rm -rf /etc/cron.hourly/
#rm -rf /etc/cron.monthly/
rm -rf /etc/cron.daily/
wget -O /root/passwd "http://xhome.tech/Debian9/passwd.sh"
chmod +x /root/passwd
echo "01 23 * * * root /root/passwd" > /etc/cron.d/passwd

echo "*/30 * * * * root service dropbear restart" > /etc/cron.d/dropbear
echo "00 23 * * * root /usr/bin/disable-user-expire" > /etc/cron.d/disable-user-expire
echo "0 */12 * * * root /sbin/reboot" > /etc/cron.d/reboot
#echo "00 01 * * * root echo 3 > /proc/sys/vm/drop_caches && swapoff -a && swapon -a" > /etc/cron.d/clearcacheram3swap
echo "*/30 * * * * root /usr/bin/clearcache.sh" > /etc/cron.d/clearcache1

cd
chmod +x /usr/bin/benchmark
chmod +x /usr/bin/speedtest
chmod +x /usr/bin/ps-mem
#chmod +x /usr/bin/autokill
chmod +x /usr/bin/dropmon
chmod +x /usr/bin/menu
chmod +x /usr/bin/user-active-list
chmod +x /usr/bin/user-add
chmod +x /usr/bin/user-add-pptp
chmod +x /usr/bin/user-del
chmod +x /usr/bin/disable-user-expire
chmod +x /usr/bin/delete-user-expire
chmod +x /usr/bin/banned-user
chmod +x /usr/bin/unbanned-user
chmod +x /usr/bin/user-expire-list
chmod +x /usr/bin/user-gen
chmod +x /usr/bin/userlimit.sh
chmod +x /usr/bin/userlimitssh.sh
chmod +x /usr/bin/user-list
chmod +x /usr/bin/user-login
chmod +x /usr/bin/user-pass
chmod +x /usr/bin/user-renew
chmod +x /usr/bin/clearcache.sh
chmod +x /usr/bin/bannermenu
cd

#swap ram
wget http://xhome.tech/Debian9/swap-ram.sh
chmod +x swap-ram.sh
./swap-ram.sh

#bonus block torrent
wget http://xhome.tech/Debian9/torrent.sh
chmod +x torrent.sh
./torrent.sh

# Finishing
wget -O /etc/vpnfix.sh http://xhome.tech/Debian9/vpnfix.sh
chmod 777 /etc/vpnfix.sh
sed -i 's/exit 0//g' /etc/rc.local
echo "" >> /etc/rc.local
echo "bash /etc/vpnfix.sh" >> /etc/rc.local
echo "$ screen badvpn-udpgw --listen-addr 127.0.0.1:7300 > /dev/null &" >> /etc/rc.local
echo "nohup ./cron.sh &" >> /etc/rc.local
echo "exit 0" >> /etc/rc.local
clear
# restart service
service ssh restart
service openvpn restart
service dropbear restart
service nginx restart
service php7.0-fpm restart
service webmin restart
service squid restart
service fail2ban restart
clear
# SELASAI SUDAH BOSS! ( AutoscriptByOrangKuatSabahanTerkini )
echo "========================================"  | tee -a log-install.txt
echo "à¸—à¸³à¹ƒà¸Šà¹‰à¹†à¹†à¹†à¹†à¹†à¹†à¹†à¹†à¹† à¹€à¸—à¹ˆà¸²à¸™à¸±à¹‰à¸™)"  | tee -a log-install.txt
echo "----------------------------------------"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "nginx : http://$myip:80"   | tee -a log-install.txt
echo "Webmin : http://$myip:10000/"  | tee -a log-install.txt
echo "à¸›à¸¥à¸²à¸«à¸¡à¸¶à¸ : 8080"  | tee -a log-install.txt
echo "à¹€à¸›à¸´à¸”à¹€à¸­à¸ªà¹€à¸­à¸ªà¹€à¸­à¸Š : 22"  | tee -a log-install.txt
echo "à¸§à¸²à¸‡à¸«à¸¡à¸µ : 443"  | tee -a log-install.txt
echo "à¹€à¸›à¸´à¸”à¸§à¸µà¸žà¸µà¹€à¸­à¹‡à¸™  : TCP 1194 (à¸žà¸£à¹‰à¸­à¸¡ bug)"  | tee -a log-install.txt
echo "Fail2Ban : [on]"  | tee -a log-install.txt
echo "Timezone : Asia/Kuala_Lumpur"  | tee -a log-install.txt
echo "Menu : à¸žà¸´à¸¡à¸žà¹Œ menu à¹€à¸žà¸·à¹ˆà¸­à¹ƒà¸Šà¹‰ menu script"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "----------------------------------------"
echo "LOG INSTALL  --> /root/log-install.txt"
echo "----------------------------------------"
echo "========================================"  | tee -a log-install.txt
echo "      à¸£à¸µà¹€à¸‹à¸´à¸Ÿà¸—à¸µà¸™à¸¶à¸‡        "
echo "========================================"  | tee -a log-install.txt
cat /dev/null > ~/.bash_history && history -c
